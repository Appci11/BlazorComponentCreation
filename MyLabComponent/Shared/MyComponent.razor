@if (loaded)
{
    if (Pavadinimai.Count > 0)
    {
        <LabelsContainer Labels="Labels" OnStatusUpdated="HandleStatusUpdated">
            @for (int i = 0; i < Pavadinimai.Count; i++)
            {
                <LabelList ListStatus=@((EnumColumns)Enum.ToObject(typeof(EnumColumns), @i)) StultepioPav=@Pavadinimai[@i] />
            }
        </LabelsContainer>
    }
}

@code {
    [Parameter] public EventCallback<int> OnEmployeeDeleted { get; set; }
    [Parameter] public List<String> Pavadinimai { get; set; }
    [Parameter] public List<List<String>> Eilutes { get; set; }

    bool loaded = false;
    int colIndex = 0;

    List<LabelModel> Labels = new List<LabelModel>();

    protected override void OnInitialized()
    {
        int id = 1;
        for (int i = 0; i < Pavadinimai.Count; i++)
        {
            foreach (var item in Eilutes[i])
            {
                Labels.Add(new LabelModel { Id = id++, Description = item, Column = (EnumColumns)i, ColNr = i });
            }
        }
        loaded = true;
    }

    async void HandleStatusUpdated(LabelModel item)
    {
        int buvo = item.ColNr;
        int yra = (int)item.Column;
        if (buvo != yra)
        {
            Eilutes[yra].Add(item.Description);
            Eilutes[buvo].Remove(item.Description);
        }
        await OnEmployeeDeleted.InvokeAsync();
    }
}